name: Build Images

on:
  push:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version'
jobs:
  build:
    runs-on: ${{ matrix.host }}
    strategy:
      matrix:
        host: [
          "ubuntu-latest",
          #"macos-10.15",
        ]
        config:
          - {
              name: "Debian Buster armhf",
              basefile: "base_buster_armhf",
              opendshfile: "opendsh_buster_armhf",
              arch: "armhf",
              osname: "buster",
              ostype: "Debian"
            }
          - {
              name: "Debian Buster arm64",
              basefile: "base_buster_arm64",
              opendshfile: "opendsh_buster_arm64",
              arch: "arm64",
              osname: "buster",
              ostype: "Debian"
            }
    name: 'Build:  ${{ matrix.config.name }}'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v1

      - name: Create Base Image
        uses: Nature40/pimod@v0.2.1
        with:
          pifile: ${{ matrix.config.basefile }}.Pifile
      - name: Create Final Image
        uses: Nature40/pimod@v0.2.1
        with:
          pifile: ${{ matrix.config.opendshfile }}.Pifile
      - 
        name: Get the version
        id: get_version
        run: |
          if [ -z "$ostype" ]
          then 
                osname=${ostype}_${osname}
          fi
          if [ -z "$version" ]
          then
                version=$(date '+%Y%m%d')
                echo ::set-output name=version::"${version}-${osname}-${arch}"
          else
                echo ::set-output name=version::"${version}"
          fi
        env:
          version: ${{ github.event.inputs.version }}
          arch: ${{ matrix.config.arch }}
          ostype: ${{ matrix.config.ostype }}
          osname: ${{ matrix.config.osname }}
      - name: Rename Image
        run: mv ${{ matrix.config.opendshfile }}.img opendsh-${{ steps.get_version.outputs.version }}.img
        env:
          RELEASE_VERSION: ${{ steps.get_version.outputs.version }}
      - name: Package zip
        run: zip opendsh-${{ steps.get_version.outputs.version }}.zip opendsh-${{ steps.get_version.outputs.version }}.img
        env:
          RELEASE_VERSION: ${{ steps.get_version.outputs.version }}
      - name: Create GitHub release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE_VERSION: ${{ steps.get_version.outputs.version }}
        with:
          tag_name: ${{ env.RELEASE_VERSION }}
          release_name: Release ${{ env.RELEASE_VERSION }}
          draft: true
          prerelease: true
      - name: Upload zip to release
        id: upload_batrack_zip
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE_VERSION: ${{ steps.get_version.outputs.version }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: opendsh-${{ steps.get_version.outputs.version }}.zip
          asset_name: opendsh-${{ steps.get_version.outputs.version }}.zip
          asset_content_type: application/zip
